[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "statwhy"
dynamic = ["version"]
description = "Formally verified statistical hypothesis testing with automated verification"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "StatWhy Team", email = "contact@statwhy.org"}
]
maintainers = [
    {name = "StatWhy Team", email = "contact@statwhy.org"}
]
keywords = ["statistics", "formal-verification", "hypothesis-testing", "why3", "cameleer"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "flask>=2.0.0",
    "flask-cors>=3.0.0",
    "click>=8.0.0",
    "rich>=12.0.0",
    "pydantic>=1.8.0",
    "fastapi>=0.68.0",
    "uvicorn[standard]>=0.15.0",
    "jinja2>=3.0.0",
    "aiofiles>=0.7.0",
    "python-multipart>=0.0.5",
    "httpx>=0.24.0",
    "pytest>=6.0.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.18.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.17.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.16.0",
    "sphinx-autodoc-typehints>=1.12.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "jupyterlab>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/fraware/statwhy"
Documentation = "https://statwhy.readthedocs.io"
Repository = "https://github.com/fraware/statwhy.git"
"Bug Tracker" = "https://github.com/fraware/statwhy/issues"
"Changelog" = "https://github.com/fraware/statwhy/blob/main/CHANGELOG.md"

[project.scripts]
statwhy = "statwhy.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
statwhy = ["py.typed", "templates/*", "static/*"]

[tool.setuptools_scm]
write_to = "src/statwhy/_version.py"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["statwhy"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/statwhy"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
